# === User configuration === #

# History
HISTFILE=~/.zsh_history
HISTSIZE=500000
SAVEHIST=500000

# Immediately append to history file
setopt INC_APPEND_HISTORY

# Record timestamp
setopt EXTENDED_HISTORY

# Expire duplicate entries first
setopt HIST_EXPIRE_DUPS_FIRST

# Ignore duplicates
setopt HIST_IGNORE_DUPS

# Delete old entry if new entry is a duplicate
setopt HIST_IGNORE_ALL_DUPS

# Do not display a line previously found
setopt HIST_FIND_NO_DUPS

# Do not store a line starting with a space in the history
setopt HIST_IGNORE_SPACE

# Do not save duplicate to the history file
setopt HIST_SAVE_NO_DUPS

# Share history between sessions
setopt SHARE_HISTORY


export TERM="xterm-256color"

export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"

export PATH=~/.npm-global/bin:$PATH

export PATH="$HOME/go/bin:$PATH"

export PATH="$(composer config -g home)/vendor/bin:$PATH"

# MySQL
if [ -d "/usr/local/mysql" ]; then
  export PATH="/usr/local/mysql/bin:$PATH"
fi

# PHPStorm
if [ -d "/Applications/PhpStorm.app" ]; then
  export PATH="/Applications/PhpStorm.app/Contents/MacOS:$PATH"
fi

# DOTNET root using homebrew
if [ -d "/opt/homebrew/opt/dotnet" ]; then
  export DOTNET_ROOT="/opt/homebrew/opt/dotnet/libexec"
fi

# pnpm
export PNPM_HOME="$HOME/Library/pnpm"
case ":$PATH:" in
  *":$PNPM_HOME:"*) ;;
  *) export PATH="$PNPM_HOME:$PATH" ;;
esac
# pnpm end


# Alias for python
if [ -x "$(command -v python3)" ]; then
  alias python=python3
fi

# Alias for pip
if [ -x "$(command -v pip3)" ]; then
  alias pip=pip3
fi

# Editor
export EDITOR='nvim'

# GPG
export GPG_TTY=$(tty)

alias thio-one-local='mosh trulyao@thio.local'
alias thio-one='mosh trulyao@thio'
alias ld1="mosh trulyao@ld1"

alias rb='eval "$(rbenv init - zsh)" && rbenv' 

function set_title() {
  wezterm cli set-tab-title "$1"
}

alias st=set_title;



# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Compilation flags
# export ARCHFLAGS="-arch x86_64"


# bun completions
[ -s "$HOME/.bun/_bun" ] && source "$HOME/.bun/_bun"

# bun
export BUN_INSTALL="$HOME/.bun"
export PATH="$BUN_INSTALL/bin:$PATH"

# Poetry
export PATH="$HOME/.local/bin:$PATH"

export PATH="/opt/homebrew/opt/libpq/bin:$PATH"
export PQ_LIB_DIR="$(brew --prefix libpq)/lib"

# Java
export JAVA_HOME="/usr/libexec/java_home -v 21"

# Add zellij config path
export ZELLIJ_CONFIG_DIR="$HOME/.config/zellij"

[[ "$TERM_PROGRAM" == "CodeEditApp_Terminal" ]] && . "/Applications/CodeEdit.app/Contents/Resources/codeedit_shell_integration.zsh"

if [ -d "$HOME/Library/Android/sdk" ]; then
  export PATH="$HOME/Library/Android/sdk/tools:$PATH"
  export PATH="$HOME/Library/Android/sdk/platform-tools:$PATH"
fi

# export PATH="$(brew --prefix llvm@16)/bin:$PATH"

# Inko
if [ -d "$HOME/Library/Application Support/ivm" ]; then
  export PATH="$HOME/Library/Application Support/ivm/bin:$PATH"
fi

[ -d "$HOME/.local/bin/c3" ] && export PATH="$HOME/.local/bin/c3:$PATH"

eval "$(zoxide init zsh)"

# Aliases
alias cd='z'
alias cat='bat'
alias ls='eza'

# Init starship
eval "$(starship init zsh)"

source ~/zsh-autocomplete/zsh-autocomplete.plugin.zsh

# Mise
MISE_PATH=$(which mise)
if [ -x "$MISE_PATH" ]; then
  eval "$(mise activate zsh)"
fi

eval "$(atuin init zsh --disable-up-arrow)"

# A bunch of navigation "aliases"
export PERSONAL_DIR="$HOME/personal"
function personal() { cd ${PERSONAL_DIR}/$1 }
alias per=personal

export WORK_DIR="$HOME/work"
function work() { cd ${WORK_DIR}/$1 }
alias wrk=work

export SCHOOL_DIR="$HOME/school"
function school() { cd ${SCHOOL_DIR}/$1 }
alias sch=school

function yy() {
	local tmp="$(mktemp -t "yazi-cwd.XXXXXX")"
	yazi "$@" --cwd-file="$tmp"
	if cwd="$(cat -- "$tmp")" && [ -n "$cwd" ] && [ "$cwd" != "$PWD" ]; then
		cd -- "$cwd"
	fi
	rm -f -- "$tmp"
}

eval "$(direnv hook zsh)"
